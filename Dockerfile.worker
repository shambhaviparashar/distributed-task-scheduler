# Build stage
FROM golang:1.21-alpine AS builder

# Install git and build-essential
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the entire source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags="-w -s" -o worker ./cmd/worker

# Final stage
FROM alpine:3.18

# Install ca-certificates for HTTPS connections and tzdata for timezone support
# Also install bash and command execution tools
RUN apk --no-cache add ca-certificates tzdata bash curl wget jq

# Set working directory
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /app/worker .

# Create a directory for task scripts and command outputs
RUN mkdir -p /app/tasks /app/logs

# Default environment settings - can be overridden at runtime
ENV LOG_LEVEL=info \
    DB_HOST=postgres \
    DB_PORT=5432 \
    DB_USER=taskuser \
    DB_PASSWORD=password \
    DB_NAME=taskdb \
    DB_SSLMODE=disable \
    REDIS_ADDR=redis:6379 \
    REDIS_PASSWORD= \
    REDIS_DB=0 \
    WORKER_COUNT=5

# Expose metrics port
EXPOSE 9090

# Copy health check script
COPY --from=builder /app/scripts/worker-health-check.sh /app/worker-health-check.sh
RUN chmod +x /app/worker-health-check.sh

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD /app/worker-health-check.sh || exit 1

# Set resource limits (metadata only)
LABEL org.opencontainers.image.vendor="Your Organization" \
      org.opencontainers.image.title="Task Scheduler Worker" \
      org.opencontainers.image.description="Worker service for the distributed task scheduler" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.authors="youremail@example.com" \
      com.yourdomain.memory-limit="512Mi" \
      com.yourdomain.cpu-limit="500m"

# Run the worker service
CMD ["./worker"] 